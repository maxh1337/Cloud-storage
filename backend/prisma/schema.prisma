// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  fio String

  email    String @unique
  password String
}

model File {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")

  fileName     String @map("file_name")
  originalName String @unique @map("original_name")
  size         Int
  mimeType     String @map("mime_type")

  executorName          String? @map("executor_name")
  developmentDepartment String? @map("development_department")

  themeName String @map("theme_name")
  theme     Theme  @relation(fields: [themeId], references: [id])
  themeId   Int
}

model Theme {
  id Int @id @default(autoincrement())

  themeName String @unique @map("theme_name")
  themeCode String @unique
  themeHead String

  startDate DateTime @default(now()) @map("start_date")
  endDate   String   @map("end_date")

  files File[]
}

// model Folder {
//   id        Int      @id @default(autoincrement())
//   name      String   @unique
//   createdAt DateTime @default(now()) @map("created_at")
//   updatedAt DateTime @updatedAt @map("updated_at")

//   user   User @relation(fields: [userId], references: [id])
//   userId Int  @map("user_id")

//   folders Folder[] @relation("FolderIntoFolder")

//   folder        Folder? @relation("FolderIntoFolder", fields: [upperFolderId], references: [id])
//   upperFolderId Int?

//   files File[]
// }
